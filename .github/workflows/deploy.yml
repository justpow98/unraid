name: Deploy to Unraid

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    branches: [ main ]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Deploy Updated Services
        run: |
          echo "🔄 Working directory: $(pwd)"
          echo "🔄 Available files:"
          ls -la
          
          # .env file should be mounted directly to workspace root
          if [ -f "/workspace/.env" ]; then
            echo "✅ Found .env file at /workspace/.env"
            cp /workspace/.env .
          else
            echo "❌ .env file not found at /workspace/.env"
            echo "📁 Contents of /workspace:"
            ls -la /workspace/ 2>/dev/null || echo "Cannot access /workspace"
            exit 1
          fi
          
          echo "🔍 Checking for recently modified compose files..."
          
          # Get list of changed files in the last commit
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || git diff --name-only HEAD)
          echo "📝 Changed files: $CHANGED_FILES"
          
          # Check if any compose files were modified
          UPDATED_SERVICES=""
          echo "$CHANGED_FILES" | grep "docker-compose.yml" | while read compose_file; do
            if [ -f "$compose_file" ]; then
              service_dir=$(dirname "$compose_file")
              service_name=$(basename "$service_dir")
              
              echo "🚀 Deploying service: $service_name at $service_dir"
              
              # Use direct docker-compose commands with absolute path to .env
              cd "$service_dir"
              
              # Use absolute path to the .env file we copied to repo root
              ENV_FILE="$GITHUB_WORKSPACE/.env"
              
              echo "📦 Pulling images for $service_name..."
              docker-compose --env-file "$ENV_FILE" pull || echo "⚠️ Pull failed"
              
              echo "🔄 Restarting $service_name..."
              docker-compose --env-file "$ENV_FILE" down || echo "⚠️ Down failed"
              docker-compose --env-file "$ENV_FILE" up -d || echo "❌ Up failed"
              
              echo "✅ $service_name deployment attempt complete"
              cd - > /dev/null
              
              echo "---"
            fi
          done
          
          # If no compose files changed, check if this might be a manual deployment
          if [ -z "$(echo "$CHANGED_FILES" | grep "docker-compose.yml")" ]; then
            echo "ℹ️ No docker-compose.yml files were modified in this commit"
            echo "🤔 This might be a documentation or configuration change"
          fi
          
          echo "🎉 Deployment complete!"
          
          # Clean up any orphaned containers
          echo "🧹 Cleaning up orphaned containers..."
          docker container prune -f
          
          # Show running containers for verification
          echo "📊 Currently running containers:"
          docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"